<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexType name="argumentType" abstract="true" mixed="true">
        <xs:attribute name="name" use="required"/>
    </xs:complexType>

    <xs:element name="config">
        <xs:complexType>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="implementation" type="implementationType" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="argumentList" type="typeType" minOccurs="0" maxOccurs="unbounded">
                    <xs:unique name="uniqueTypeParam">
                        <xs:annotation>
                            <xs:documentation>Param name should be unique in scope of type</xs:documentation>
                        </xs:annotation>
                        <xs:selector xpath="param"/>
                        <xs:field xpath="@name"/>
                    </xs:unique>
                </xs:element>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="implementationType">
        <xs:annotation>
            <xs:documentation>
                Implementation help Object Manager to choose class for corresponding interface
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="implementer" type="phpClassName" use="required"/>
        <xs:attribute name="interface" type="phpClassName" use="required"/>
    </xs:complexType>

    <xs:complexType name="typeType">
        <xs:annotation>
            <xs:documentation>With 'type' tag you can point parameters and plugins for certain class</xs:documentation>
        </xs:annotation>
        <xs:choice maxOccurs="unbounded">
            <xs:element name="arguments" type="argumentsType" minOccurs="0" maxOccurs="1">
                <xs:key name="argumentName">
                    <xs:selector xpath="argument"/>
                    <xs:field xpath="@name"/>
                </xs:key>
            </xs:element>
        </xs:choice>
        <xs:attribute name="for" type="phpClassName" use="required"/>
    </xs:complexType>

    <xs:simpleType name="phpClassName">
        <xs:annotation>
            <xs:documentation>A string that matches a Fully Qualified Class Name from PHP. No backslashes are allowed.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="(\\?[a-zA-Z_&#x7f;-&#xff;][a-zA-Z0-9_&#x7f;-&#xff;]*)(\\[a-zA-Z_&#x7f;-&#xff;][a-zA-Z0-9_&#x7f;-&#xff;]*)*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="argumentsType">
        <xs:sequence>
            <xs:element name="argument" type="argumentType" minOccurs="1" maxOccurs="unbounded">
                <xs:key name="argumentItemName">
                    <xs:selector xpath="item"/>
                    <xs:field xpath="@name"/>
                </xs:key>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="array" mixed="true">
        <xs:complexContent>
            <xs:extension base="argumentType">
                <xs:sequence>
                    <xs:element name="item" type="argumentType" minOccurs="0" maxOccurs="unbounded">
                        <xs:key name="itemName">
                            <xs:selector xpath="item"/>
                            <xs:field xpath="@name"/>
                        </xs:key>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="scalar">
        <xs:complexContent>
            <xs:extension base="argumentType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="object">
        <xs:complexContent>
            <xs:extension base="argumentType"/>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>